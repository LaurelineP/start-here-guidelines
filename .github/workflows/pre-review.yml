name: Pre-review

on:
  pull_request:
  pull_request_target:
    branches: [ master ]
    types: [opened, synchronize, reopened, closed]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  # -------------------------------
  # 2️⃣ Real PR info collection
  # -------------------------------
  pre_review:
    if: github.event_name == 'pull_request'  || github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha || 'master'}}
          fetch-depth: 50

      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Fetch master branch
        run: git fetch origin master

      - name: Check has github token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            if [ -n "$GITHUB_TOKEN" ]; then
                echo "✅ GitHub token available"
            else
                echo "❌ No GitHub token found"
            fi
      - name: Collect information
        run: |
          echo "Setting environment variables for preReview script"
          setEnv() { echo "$1=${!1}" >> $GITHUB_ENV; }

          CONTRIBUTOR=${{ github.event.pull_request.user.login }}
          setEnv "CONTRIBUTOR"
          echo "Contributor github handle: $CONTRIBUTOR"
          
          BASE_REPO=${{ github.event.pull_request.base.repo.full_name }}
          setEnv "BASE_REPO"
          echo "Base Repo: $BASE_REPO"
          

          HEAD_REF=${{ github.event.pull_request.head.ref }}
          setEnv "HEAD_REF"
          echo "Branch: $HEAD_REF"

          git fetch origin ${{ github.event.pull_request.base.ref }}

          CHANGED_FILES=$(git diff HEAD^ --name-only)
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          printf '%s\n' "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "===== CHANGED FILES ====="
          echo "$CHANGED_FILES"
          echo "=========================="
    
      - name: "Execute script"
        run: |
            REVIEW_MESSAGE=$(python pre_review.py "$CHANGED_FILES" "$CONTRIBUTOR")
            PR_NUMBER=${{ github.event.pull_request.number }}
            echo "REVIEW_MESSAGE<<EOF" >> $GITHUB_ENV
            echo "$REVIEW_MESSAGE" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

            echo "===== REVIEW_MESSAGE ====="
            echo "$REVIEW_MESSAGE"
            echo "=========================="

            # Submit feedback only if PR comes from same repo
            if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
                echo "PR from the same repo — submitting comment"
                gh pr comment "$PR_NUMBER" --body "$REVIEW_MESSAGE" -R "${{ github.event.pull_request.base.repo.full_name }}"
            else
                echo "PR from a fork — skipping comment submission"
            fi
        env: 
           CHANGED_FILES: ${{ env.CHANGED_FILES }}
           CONTRIBUTOR: ${{ env.CONTRIBUTOR }}
